# Generated by Django 4.1.4 on 2022-12-16 20:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='McMetadata',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('imdb_id', models.CharField(max_length=9)),
                ('title', models.CharField(max_length=255)),
                ('overview', models.CharField(blank=True, max_length=255, null=True)),
                ('popularity', models.FloatField()),
                ('release_date', models.DateField()),
                ('runtime', models.FloatField()),
                ('vote_average', models.FloatField()),
                ('vote_count', models.IntegerField()),
            ],
            options={
                'db_table': 'mcmetadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='McCast',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('actor_id', models.IntegerField()),
                ('name', models.CharField(max_length=512)),
                ('gender', models.SmallIntegerField()),
                ('cast_id', models.SmallIntegerField(blank=True, null=True)),
                ('cast_character', models.CharField(blank=True, max_length=512, null=True)),
                ('cast_order', models.SmallIntegerField(blank=True, null=True)),
                ('profile_path', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'mccast',
            },
        ),
        migrations.CreateModel(
            name='McCompany',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'mccompany',
            },
        ),
        migrations.CreateModel(
            name='McCountry',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'mccountry',
            },
        ),
        migrations.CreateModel(
            name='McCrew',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('employee_id', models.IntegerField()),
                ('department', models.CharField(max_length=512)),
                ('job', models.CharField(max_length=512)),
                ('name', models.CharField(max_length=512)),
                ('gender', models.SmallIntegerField()),
                ('profile_path', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'mccrew',
            },
        ),
        migrations.CreateModel(
            name='McGenre',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'mcgenre',
            },
        ),
        migrations.CreateModel(
            name='McKeyword',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'mckeyword',
            },
        ),
        migrations.CreateModel(
            name='McLanguage',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'mclanguage',
            },
        ),
        migrations.CreateModel(
            name='McMetadataLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mclanguage')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcmetadata')),
            ],
            options={
                'db_table': 'mcmetadatalanguage',
                'unique_together': {('metadata', 'language')},
            },
        ),
        migrations.CreateModel(
            name='McMetadataKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mckeyword')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcmetadata')),
            ],
            options={
                'db_table': 'mcmetadatakeyword',
                'unique_together': {('metadata', 'keyword')},
            },
        ),
        migrations.CreateModel(
            name='McMetadataGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcgenre')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcmetadata')),
            ],
            options={
                'db_table': 'mcmetadatagenre',
                'unique_together': {('metadata', 'genre')},
            },
        ),
        migrations.CreateModel(
            name='McMetadataCrew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mccrew')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcmetadata')),
            ],
            options={
                'db_table': 'mcmetadatacrew',
                'unique_together': {('metadata', 'crew')},
            },
        ),
        migrations.CreateModel(
            name='McMetadataCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mccountry')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcmetadata')),
            ],
            options={
                'db_table': 'mcmetadatacountry',
                'unique_together': {('metadata', 'country')},
            },
        ),
        migrations.CreateModel(
            name='McMetadataCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mccompany')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcmetadata')),
            ],
            options={
                'db_table': 'mcmetadatacompany',
                'unique_together': {('metadata', 'company')},
            },
        ),
        migrations.CreateModel(
            name='McMetadataCast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mccast')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.mcmetadata')),
            ],
            options={
                'db_table': 'mcmetadatacast',
                'unique_together': {('metadata', 'cast')},
            },
        ),
    ]
